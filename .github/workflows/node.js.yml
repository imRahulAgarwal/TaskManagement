# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Task Management CI-CD

on:
    push:
        branches: ["main"]

jobs:
    build:
        runs-on: self-hosted
        steps:
            - name: Checkout out the code
              uses: actions/checkout@v4
              with:
                  clean: false

    server:
        needs: build
        runs-on: self-hosted
        strategy:
            matrix:
                node-version: [20.x]

        steps:
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{matrix.node-version}}
                  cache: "npm"
                  cache-dependency-path: server/package-lock.json
            - run: |
                  cd server/
                  npm ci
                  touch .env
                  echo "${{ secrets.SERVER_ENV }}" > .env
                  pm2 stop taskmanagement-api || true
                  pm2 start server.js --name taskmanagement-api

    client:
        needs: build
        runs-on: self-hosted
        strategy:
            matrix:
                node-version: [20.x]

        steps:
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{matrix.node-version}}
                  cache: "npm"
                  cache-dependency-path: client/package-lock.json
            - run: |
                  cd client/
                  npm ci
                  touch .env
                  echo "${{ secrets.CLIENT_ENV }}" > .env
                  npm run build
                  [ ! -d "/var/www/TaskManagement" ] && mkdir /var/www/TaskManagement
                  mv dist/* /var/www/TaskManagement/
